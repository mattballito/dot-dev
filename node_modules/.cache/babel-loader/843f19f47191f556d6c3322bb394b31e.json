{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mover = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Enums_1 = require(\"../../Enums\");\n\nvar Mover = /*#__PURE__*/function () {\n  function Mover(container, particle) {\n    _classCallCheck(this, Mover);\n\n    this.container = container;\n    this.particle = particle;\n  }\n\n  _createClass(Mover, [{\n    key: \"move\",\n    value: function move(delta) {\n      var particle = this.particle;\n      particle.bubble.inRange = false;\n      particle.links = [];\n\n      var _iterator = _createForOfIteratorHelper(this.container.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              plugin = _step$value[1];\n\n          if (particle.destroyed) {\n            break;\n          }\n\n          if (plugin.particleUpdate) {\n            plugin.particleUpdate(particle, delta);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      this.moveParticle(delta);\n      this.moveParallax();\n    }\n  }, {\n    key: \"moveParticle\",\n    value: function moveParticle(delta) {\n      var _a, _b, _c;\n\n      var particle = this.particle;\n      var particlesOptions = particle.options;\n\n      if (!particlesOptions.move.enable) {\n        return;\n      }\n\n      var container = this.container;\n      var slowFactor = this.getProximitySpeedFactor();\n      var baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) * container.retina.reduceFactor;\n      var maxSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n      var sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\n      var moveSpeed = baseSpeed / 2 * sizeFactor * slowFactor * delta.factor;\n      var moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.NumberUtils.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\n      this.applyPath(delta);\n      var gravityOptions = particlesOptions.move.gravity;\n      var gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\n\n      if (gravityOptions.enable) {\n        particle.velocity.y += gravityFactor * (gravityOptions.acceleration * delta.factor) / (60 * moveSpeed);\n      }\n\n      if (moveSpeed) {\n        particle.velocity.x += moveDrift * delta.factor / (60 * moveSpeed);\n      }\n\n      particle.velocity.multTo(1 - particle.options.move.decay);\n      var velocity = particle.velocity.mult(moveSpeed);\n      var maxSpeed = (_c = particle.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n\n      if (gravityOptions.enable && (!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed || gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed) && gravityOptions.maxSpeed > 0) {\n        velocity.y = gravityFactor * maxSpeed;\n\n        if (moveSpeed) {\n          particle.velocity.y = velocity.y / moveSpeed;\n        }\n      }\n\n      particle.position.addTo(velocity);\n\n      if (particlesOptions.move.vibrate) {\n        particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n        particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n      }\n\n      var initialPosition = particle.initialPosition;\n      var initialDistance = Utils_1.NumberUtils.getDistance(initialPosition, particle.position);\n\n      if (particle.maxDistance) {\n        if (initialDistance >= particle.maxDistance && !particle.misplaced) {\n          particle.misplaced = initialDistance > particle.maxDistance;\n          particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n          particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        } else if (initialDistance < particle.maxDistance && particle.misplaced) {\n          particle.misplaced = false;\n        } else if (particle.misplaced) {\n          if (particle.position.x < initialPosition.x && particle.velocity.x < 0 || particle.position.x > initialPosition.x && particle.velocity.x > 0) {\n            particle.velocity.x *= -Math.random();\n          }\n\n          if (particle.position.y < initialPosition.y && particle.velocity.y < 0 || particle.position.y > initialPosition.y && particle.velocity.y > 0) {\n            particle.velocity.y *= -Math.random();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"applyPath\",\n    value: function applyPath(delta) {\n      var particle = this.particle;\n      var particlesOptions = particle.options;\n      var pathOptions = particlesOptions.move.path;\n      var pathEnabled = pathOptions.enable;\n\n      if (!pathEnabled) {\n        return;\n      }\n\n      var container = this.container;\n\n      if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n      }\n\n      var generator = container.pathGenerator;\n\n      if (pathOptions.generator) {\n        var customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\n\n        if (customGenerator) {\n          generator = customGenerator;\n        }\n      }\n\n      var path = generator.generate(particle);\n      particle.velocity.addTo(path);\n\n      if (pathOptions.clamp) {\n        particle.velocity.x = Utils_1.NumberUtils.clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = Utils_1.NumberUtils.clamp(particle.velocity.y, -1, 1);\n      }\n\n      particle.lastPathTime -= particle.pathDelay;\n    }\n  }, {\n    key: \"moveParallax\",\n    value: function moveParallax() {\n      var container = this.container;\n      var options = container.actualOptions;\n\n      if (Utils_1.Utils.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n        return;\n      }\n\n      var particle = this.particle;\n      var parallaxForce = options.interactivity.events.onHover.parallax.force;\n      var mousePos = container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return;\n      }\n\n      var canvasCenter = {\n        x: container.canvas.size.width / 2,\n        y: container.canvas.size.height / 2\n      };\n      var parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\n      var factor = particle.getRadius() / parallaxForce;\n      var tmp = {\n        x: (mousePos.x - canvasCenter.x) * factor,\n        y: (mousePos.y - canvasCenter.y) * factor\n      };\n      particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\n      particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\n    }\n  }, {\n    key: \"getProximitySpeedFactor\",\n    value: function getProximitySpeedFactor() {\n      var container = this.container;\n      var options = container.actualOptions;\n      var active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\n\n      if (!active) {\n        return 1;\n      }\n\n      var mousePos = this.container.interactivity.mouse.position;\n\n      if (!mousePos) {\n        return 1;\n      }\n\n      var particlePos = this.particle.getPosition();\n      var dist = Utils_1.NumberUtils.getDistance(mousePos, particlePos);\n      var radius = container.retina.slowModeRadius;\n\n      if (dist > radius) {\n        return 1;\n      }\n\n      var proximityFactor = dist / radius || 0;\n      var slowFactor = options.interactivity.modes.slow.factor;\n      return proximityFactor / slowFactor;\n    }\n  }]);\n\n  return Mover;\n}();\n\nexports.Mover = Mover;","map":{"version":3,"sources":["C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Core/Particle/Mover.js"],"names":["Object","defineProperty","exports","value","Mover","Utils_1","require","Enums_1","container","particle","delta","bubble","inRange","links","plugins","plugin","destroyed","particleUpdate","moveParticle","moveParallax","_a","_b","_c","particlesOptions","options","move","enable","slowFactor","getProximitySpeedFactor","baseSpeed","moveSpeed","NumberUtils","getRangeValue","speed","retina","pixelRatio","reduceFactor","maxSize","getRangeMax","size","sizeFactor","getRadius","factor","moveDrift","drift","applyPath","gravityOptions","gravity","gravityFactor","inverse","velocity","y","acceleration","x","multTo","decay","mult","maxSpeed","position","addTo","vibrate","Math","sin","cos","initialPosition","initialDistance","getDistance","maxDistance","misplaced","random","pathOptions","path","pathEnabled","lastPathTime","pathDelay","generator","pathGenerator","customGenerator","Plugins","getPathGenerator","generate","clamp","actualOptions","Utils","isSsr","interactivity","events","onHover","parallax","parallaxForce","force","mousePos","mouse","canvasCenter","canvas","width","height","parallaxSmooth","smooth","tmp","offset","active","isInArray","HoverMode","slow","mode","particlePos","getPosition","dist","radius","slowModeRadius","proximityFactor","modes"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Mover = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nconst Enums_1 = require(\"../../Enums\");\r\nclass Mover {\r\n    constructor(container, particle) {\r\n        this.container = container;\r\n        this.particle = particle;\r\n    }\r\n    move(delta) {\r\n        const particle = this.particle;\r\n        particle.bubble.inRange = false;\r\n        particle.links = [];\r\n        for (const [, plugin] of this.container.plugins) {\r\n            if (particle.destroyed) {\r\n                break;\r\n            }\r\n            if (plugin.particleUpdate) {\r\n                plugin.particleUpdate(particle, delta);\r\n            }\r\n        }\r\n        if (particle.destroyed) {\r\n            return;\r\n        }\r\n        this.moveParticle(delta);\r\n        this.moveParallax();\r\n    }\r\n    moveParticle(delta) {\r\n        var _a, _b, _c;\r\n        const particle = this.particle;\r\n        const particlesOptions = particle.options;\r\n        if (!particlesOptions.move.enable) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        const slowFactor = this.getProximitySpeedFactor();\r\n        const baseSpeed = ((_a = particle.moveSpeed) !== null && _a !== void 0 ? _a : Utils_1.NumberUtils.getRangeValue(particle.options.move.speed) * container.retina.pixelRatio) *\r\n            container.retina.reduceFactor;\r\n        const maxSize = Utils_1.NumberUtils.getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\r\n        const sizeFactor = particlesOptions.move.size ? particle.getRadius() / maxSize : 1;\r\n        const moveSpeed = (baseSpeed / 2) * sizeFactor * slowFactor * delta.factor;\r\n        const moveDrift = (_b = particle.moveDrift) !== null && _b !== void 0 ? _b : Utils_1.NumberUtils.getRangeValue(particle.options.move.drift) * container.retina.pixelRatio;\r\n        this.applyPath(delta);\r\n        const gravityOptions = particlesOptions.move.gravity;\r\n        const gravityFactor = gravityOptions.enable && gravityOptions.inverse ? -1 : 1;\r\n        if (gravityOptions.enable) {\r\n            particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\r\n        }\r\n        if (moveSpeed) {\r\n            particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\r\n        }\r\n        particle.velocity.multTo(1 - particle.options.move.decay);\r\n        const velocity = particle.velocity.mult(moveSpeed);\r\n        const maxSpeed = (_c = particle.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\r\n        if (gravityOptions.enable &&\r\n            ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\r\n                (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed)) &&\r\n            gravityOptions.maxSpeed > 0) {\r\n            velocity.y = gravityFactor * maxSpeed;\r\n            if (moveSpeed) {\r\n                particle.velocity.y = velocity.y / moveSpeed;\r\n            }\r\n        }\r\n        particle.position.addTo(velocity);\r\n        if (particlesOptions.move.vibrate) {\r\n            particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\r\n            particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\r\n        }\r\n        const initialPosition = particle.initialPosition;\r\n        const initialDistance = Utils_1.NumberUtils.getDistance(initialPosition, particle.position);\r\n        if (particle.maxDistance) {\r\n            if (initialDistance >= particle.maxDistance && !particle.misplaced) {\r\n                particle.misplaced = initialDistance > particle.maxDistance;\r\n                particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\r\n                particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\r\n            }\r\n            else if (initialDistance < particle.maxDistance && particle.misplaced) {\r\n                particle.misplaced = false;\r\n            }\r\n            else if (particle.misplaced) {\r\n                if ((particle.position.x < initialPosition.x && particle.velocity.x < 0) ||\r\n                    (particle.position.x > initialPosition.x && particle.velocity.x > 0)) {\r\n                    particle.velocity.x *= -Math.random();\r\n                }\r\n                if ((particle.position.y < initialPosition.y && particle.velocity.y < 0) ||\r\n                    (particle.position.y > initialPosition.y && particle.velocity.y > 0)) {\r\n                    particle.velocity.y *= -Math.random();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    applyPath(delta) {\r\n        const particle = this.particle;\r\n        const particlesOptions = particle.options;\r\n        const pathOptions = particlesOptions.move.path;\r\n        const pathEnabled = pathOptions.enable;\r\n        if (!pathEnabled) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        if (particle.lastPathTime <= particle.pathDelay) {\r\n            particle.lastPathTime += delta.value;\r\n            return;\r\n        }\r\n        let generator = container.pathGenerator;\r\n        if (pathOptions.generator) {\r\n            const customGenerator = Utils_1.Plugins.getPathGenerator(pathOptions.generator);\r\n            if (customGenerator) {\r\n                generator = customGenerator;\r\n            }\r\n        }\r\n        const path = generator.generate(particle);\r\n        particle.velocity.addTo(path);\r\n        if (pathOptions.clamp) {\r\n            particle.velocity.x = Utils_1.NumberUtils.clamp(particle.velocity.x, -1, 1);\r\n            particle.velocity.y = Utils_1.NumberUtils.clamp(particle.velocity.y, -1, 1);\r\n        }\r\n        particle.lastPathTime -= particle.pathDelay;\r\n    }\r\n    moveParallax() {\r\n        const container = this.container;\r\n        const options = container.actualOptions;\r\n        if (Utils_1.Utils.isSsr() || !options.interactivity.events.onHover.parallax.enable) {\r\n            return;\r\n        }\r\n        const particle = this.particle;\r\n        const parallaxForce = options.interactivity.events.onHover.parallax.force;\r\n        const mousePos = container.interactivity.mouse.position;\r\n        if (!mousePos) {\r\n            return;\r\n        }\r\n        const canvasCenter = {\r\n            x: container.canvas.size.width / 2,\r\n            y: container.canvas.size.height / 2,\r\n        };\r\n        const parallaxSmooth = options.interactivity.events.onHover.parallax.smooth;\r\n        const factor = particle.getRadius() / parallaxForce;\r\n        const tmp = {\r\n            x: (mousePos.x - canvasCenter.x) * factor,\r\n            y: (mousePos.y - canvasCenter.y) * factor,\r\n        };\r\n        particle.offset.x += (tmp.x - particle.offset.x) / parallaxSmooth;\r\n        particle.offset.y += (tmp.y - particle.offset.y) / parallaxSmooth;\r\n    }\r\n    getProximitySpeedFactor() {\r\n        const container = this.container;\r\n        const options = container.actualOptions;\r\n        const active = Utils_1.Utils.isInArray(Enums_1.HoverMode.slow, options.interactivity.events.onHover.mode);\r\n        if (!active) {\r\n            return 1;\r\n        }\r\n        const mousePos = this.container.interactivity.mouse.position;\r\n        if (!mousePos) {\r\n            return 1;\r\n        }\r\n        const particlePos = this.particle.getPosition();\r\n        const dist = Utils_1.NumberUtils.getDistance(mousePos, particlePos);\r\n        const radius = container.retina.slowModeRadius;\r\n        if (dist > radius) {\r\n            return 1;\r\n        }\r\n        const proximityFactor = dist / radius || 0;\r\n        const slowFactor = options.interactivity.modes.slow.factor;\r\n        return proximityFactor / slowFactor;\r\n    }\r\n}\r\nexports.Mover = Mover;\r\n"]},"metadata":{},"sourceType":"script"}