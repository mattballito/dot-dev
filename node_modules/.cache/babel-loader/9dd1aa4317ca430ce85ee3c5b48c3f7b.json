{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Linker = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Linker = /*#__PURE__*/function () {\n  function Linker(container) {\n    _classCallCheck(this, Linker);\n\n    this.container = container;\n  }\n\n  _createClass(Linker, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.links.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"interact\",\n    value: function interact(p1) {\n      var _a;\n\n      var container = this.container;\n      var linkOpt1 = p1.options.links;\n      var optOpacity = linkOpt1.opacity;\n      var optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n      var canvasSize = container.canvas.size;\n      var warp = linkOpt1.warp;\n      var pos1 = p1.getPosition();\n      var range = warp ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n      var query = container.particles.quadTree.query(range);\n\n      var _iterator = _createForOfIteratorHelper(query),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var p2 = _step.value;\n          var linkOpt2 = p2.options.links;\n\n          if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || p1.links.map(function (t) {\n            return t.destination;\n          }).indexOf(p2) !== -1 || p2.links.map(function (t) {\n            return t.destination;\n          }).indexOf(p1) !== -1) {\n            continue;\n          }\n\n          var pos2 = p2.getPosition();\n          var distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n\n          if (warp && distance > optDistance) {\n            var pos2NE = {\n              x: pos2.x - canvasSize.width,\n              y: pos2.y\n            };\n            distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n\n            if (distance > optDistance) {\n              var pos2SE = {\n                x: pos2.x - canvasSize.width,\n                y: pos2.y - canvasSize.height\n              };\n              distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n\n              if (distance > optDistance) {\n                var pos2SW = {\n                  x: pos2.x,\n                  y: pos2.y - canvasSize.height\n                };\n                distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n              }\n            }\n          }\n\n          if (distance > optDistance) {\n            return;\n          }\n\n          var opacityLine = (1 - distance / optDistance) * optOpacity;\n          var linksOptions = p1.options.links;\n          var linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n\n          if (!linkColor) {\n            var optColor = linksOptions.color;\n            linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n\n            if (linksOptions.id !== undefined) {\n              container.particles.linksColors.set(linksOptions.id, linkColor);\n            } else {\n              container.particles.linksColor = linkColor;\n            }\n          }\n\n          p1.links.push({\n            destination: p2,\n            opacity: opacityLine\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }]);\n\n  return Linker;\n}();\n\nexports.Linker = Linker;","map":{"version":3,"sources":["C:/Users/matth/Desktop/butnerDotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Interactions/Particles/Linker.js"],"names":["Object","defineProperty","exports","value","Linker","Utils_1","require","container","particle","options","links","enable","p1","_a","linkOpt1","optOpacity","opacity","optDistance","linksDistance","retina","canvasSize","canvas","size","warp","pos1","getPosition","range","CircleWarp","x","y","Circle","query","particles","quadTree","p2","linkOpt2","id","spawning","destroyed","map","t","destination","indexOf","pos2","distance","NumberUtils","getDistance","pos2NE","width","pos2SE","height","pos2SW","opacityLine","linksOptions","linkColor","undefined","linksColors","get","linksColor","optColor","color","ColorUtils","getLinkRandomColor","blink","consent","set","push"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Linker = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nclass Linker {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    isEnabled(particle) {\r\n        return particle.options.links.enable;\r\n    }\r\n    reset() {\r\n    }\r\n    interact(p1) {\r\n        var _a;\r\n        const container = this.container;\r\n        const linkOpt1 = p1.options.links;\r\n        const optOpacity = linkOpt1.opacity;\r\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\r\n        const canvasSize = container.canvas.size;\r\n        const warp = linkOpt1.warp;\r\n        const pos1 = p1.getPosition();\r\n        const range = warp\r\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\r\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\r\n        const query = container.particles.quadTree.query(range);\r\n        for (const p2 of query) {\r\n            const linkOpt2 = p2.options.links;\r\n            if (p1 === p2 ||\r\n                !linkOpt2.enable ||\r\n                linkOpt1.id !== linkOpt2.id ||\r\n                p2.spawning ||\r\n                p2.destroyed ||\r\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\r\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\r\n                continue;\r\n            }\r\n            const pos2 = p2.getPosition();\r\n            let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\r\n            if (warp && distance > optDistance) {\r\n                const pos2NE = {\r\n                    x: pos2.x - canvasSize.width,\r\n                    y: pos2.y,\r\n                };\r\n                distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\r\n                if (distance > optDistance) {\r\n                    const pos2SE = {\r\n                        x: pos2.x - canvasSize.width,\r\n                        y: pos2.y - canvasSize.height,\r\n                    };\r\n                    distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\r\n                    if (distance > optDistance) {\r\n                        const pos2SW = {\r\n                            x: pos2.x,\r\n                            y: pos2.y - canvasSize.height,\r\n                        };\r\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\r\n                    }\r\n                }\r\n            }\r\n            if (distance > optDistance) {\r\n                return;\r\n            }\r\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\r\n            const linksOptions = p1.options.links;\r\n            let linkColor = linksOptions.id !== undefined\r\n                ? container.particles.linksColors.get(linksOptions.id)\r\n                : container.particles.linksColor;\r\n            if (!linkColor) {\r\n                const optColor = linksOptions.color;\r\n                linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\r\n                if (linksOptions.id !== undefined) {\r\n                    container.particles.linksColors.set(linksOptions.id, linkColor);\r\n                }\r\n                else {\r\n                    container.particles.linksColor = linkColor;\r\n                }\r\n            }\r\n            p1.links.push({\r\n                destination: p2,\r\n                opacity: opacityLine,\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.Linker = Linker;\r\n"]},"metadata":{},"sourceType":"script"}