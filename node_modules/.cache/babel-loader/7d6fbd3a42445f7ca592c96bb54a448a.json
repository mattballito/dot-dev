{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EmitterInstance = void 0;\nvar Utils_1 = require(\"../../Utils\");\nvar Enums_1 = require(\"../../Enums\");\nvar EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\nfunction randomCoordinate(position, offset) {\n  return position + offset * (Math.random() - 0.5);\n}\nfunction randomPosition(position, offset) {\n  return {\n    x: randomCoordinate(position.x, offset.x),\n    y: randomCoordinate(position.y, offset.y)\n  };\n}\nvar EmitterInstance = /*#__PURE__*/function () {\n  function EmitterInstance(emitters, container, emitterOptions, position) {\n    _classCallCheck(this, EmitterInstance);\n    var _a, _b, _c, _d, _e, _f;\n    var _g;\n    this.emitters = emitters;\n    this.container = container;\n    this.firstSpawn = true;\n    this.currentDuration = 0;\n    this.currentEmitDelay = 0;\n    this.currentSpawnDelay = 0;\n    this.initialPosition = position;\n    this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\n    this.spawnDelay = ((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = emitterOptions.name;\n    var particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : particlesOptions.move = {};\n    (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : _g.direction = this.emitterOptions.direction;\n    if (this.emitterOptions.spawnColor !== undefined) {\n      this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\n    }\n    this.paused = !this.emitterOptions.autoPlay;\n    this.particlesOptions = particlesOptions;\n    this.size = (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : function () {\n      var size = new EmitterSize_1.EmitterSize();\n      size.load({\n        height: 0,\n        mode: Enums_1.SizeMode.percent,\n        width: 0\n      });\n      return size;\n    }();\n    this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\n    this.immortal = this.lifeCount <= 0;\n    this.play();\n  }\n  _createClass(EmitterInstance, [{\n    key: \"externalPlay\",\n    value: function externalPlay() {\n      this.paused = false;\n      this.play();\n    }\n  }, {\n    key: \"externalPause\",\n    value: function externalPause() {\n      this.paused = true;\n      this.pause();\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      if (this.paused) {\n        return;\n      }\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\n        if (this.emitDelay === undefined) {\n          var delay = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.delay);\n          this.emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n        }\n        if (this.lifeCount > 0 || this.immortal) {\n          this.prepareToDie();\n        }\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.paused) {\n        return;\n      }\n      delete this.emitDelay;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _a, _b, _c;\n      if (this.paused) {\n        return;\n      }\n      if (this.firstSpawn) {\n        this.firstSpawn = false;\n        this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\n        this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\n        delta.value = 0;\n      }\n      if (this.duration !== undefined) {\n        this.currentDuration += delta.value;\n        if (this.currentDuration >= this.duration) {\n          this.pause();\n          if (this.spawnDelay !== undefined) {\n            delete this.spawnDelay;\n          }\n          if (!this.immortal) {\n            this.lifeCount--;\n          }\n          if (this.lifeCount > 0 || this.immortal) {\n            this.position = this.calcPosition();\n            this.spawnDelay = ((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n          } else {\n            this.destroy();\n          }\n          this.currentDuration -= this.duration;\n          delete this.duration;\n        }\n      }\n      if (this.spawnDelay !== undefined) {\n        this.currentSpawnDelay += delta.value;\n        if (this.currentSpawnDelay >= this.spawnDelay) {\n          this.play();\n          this.currentSpawnDelay -= this.currentSpawnDelay;\n          delete this.spawnDelay;\n        }\n      }\n      if (this.emitDelay !== undefined) {\n        this.currentEmitDelay += delta.value;\n        if (this.currentEmitDelay >= this.emitDelay) {\n          this.emit();\n          this.currentEmitDelay -= this.emitDelay;\n        }\n      }\n    }\n  }, {\n    key: \"prepareToDie\",\n    value: function prepareToDie() {\n      var _a;\n      if (this.paused) {\n        return;\n      }\n      var duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\n      if (this.container.retina.reduceFactor && (this.lifeCount > 0 || this.immortal) && duration !== undefined && duration > 0) {\n        this.duration = duration * 1000;\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.emitters.removeEmitter(this);\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var _a, _b;\n      var container = this.container;\n      var percentPosition = this.emitterOptions.position;\n      return {\n        x: ((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100 * container.canvas.size.width,\n        y: ((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100 * container.canvas.size.height\n      };\n    }\n  }, {\n    key: \"emit\",\n    value: function emit() {\n      var _a;\n      if (this.paused) {\n        return;\n      }\n      var container = this.container;\n      var position = this.position;\n      var offset = {\n        x: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n        y: this.size.mode === Enums_1.SizeMode.percent ? container.canvas.size.height * this.size.height / 100 : this.size.height\n      };\n      var quantity = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.quantity);\n      for (var i = 0; i < quantity; i++) {\n        var particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\n        if (this.spawnColor !== undefined) {\n          var colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n          if (colorAnimation) {\n            var hueAnimation = colorAnimation;\n            if (hueAnimation.enable) {\n              this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\n            } else {\n              var hslAnimation = colorAnimation;\n              this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n              this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n              this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n            }\n          }\n          if (!particlesOptions.color) {\n            particlesOptions.color = {\n              value: this.spawnColor\n            };\n          } else {\n            particlesOptions.color.value = this.spawnColor;\n          }\n        }\n        container.particles.addParticle(randomPosition(position, offset), particlesOptions);\n      }\n    }\n  }, {\n    key: \"setColorAnimation\",\n    value: function setColorAnimation(animation, initValue, maxValue) {\n      var _a;\n      var container = this.container;\n      if (!animation.enable) {\n        return initValue;\n      }\n      var colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\n      var delay = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.delay);\n      var emitFactor = 1000 * delay / container.retina.reduceFactor;\n      var colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\n      return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n  }]);\n  return EmitterInstance;\n}();\nexports.EmitterInstance = EmitterInstance;","map":{"version":3,"names":["_classCallCheck","require","_createClass","Object","defineProperty","exports","value","EmitterInstance","Utils_1","Enums_1","EmitterSize_1","randomCoordinate","position","offset","Math","random","randomPosition","x","y","emitters","container","emitterOptions","_a","_b","_c","_d","_e","_f","_g","firstSpawn","currentDuration","currentEmitDelay","currentSpawnDelay","initialPosition","Utils","deepExtend","spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","particlesOptions","particles","move","direction","spawnColor","undefined","ColorUtils","colorToHsl","paused","autoPlay","size","EmitterSize","load","height","mode","SizeMode","percent","width","lifeCount","count","immortal","play","key","externalPlay","externalPause","pause","emitDelay","NumberUtils","getRangeValue","rate","prepareToDie","resize","isPointInside","canvas","update","delta","duration","destroy","emit","removeEmitter","percentPosition","quantity","i","colorAnimation","animation","hueAnimation","enable","h","setColorAnimation","hslAnimation","s","l","color","addParticle","initValue","maxValue","colorOffset","randomInRange","emitFactor","colorSpeed","speed","fpsLimit"],"sources":["C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Plugins/Emitters/EmitterInstance.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EmitterInstance = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nconst Enums_1 = require(\"../../Enums\");\r\nconst EmitterSize_1 = require(\"./Options/Classes/EmitterSize\");\r\nfunction randomCoordinate(position, offset) {\r\n    return position + offset * (Math.random() - 0.5);\r\n}\r\nfunction randomPosition(position, offset) {\r\n    return {\r\n        x: randomCoordinate(position.x, offset.x),\r\n        y: randomCoordinate(position.y, offset.y),\r\n    };\r\n}\r\nclass EmitterInstance {\r\n    constructor(emitters, container, emitterOptions, position) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var _g;\r\n        this.emitters = emitters;\r\n        this.container = container;\r\n        this.firstSpawn = true;\r\n        this.currentDuration = 0;\r\n        this.currentEmitDelay = 0;\r\n        this.currentSpawnDelay = 0;\r\n        this.initialPosition = position;\r\n        this.emitterOptions = Utils_1.Utils.deepExtend({}, emitterOptions);\r\n        this.spawnDelay = (((_a = this.emitterOptions.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\r\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\r\n        this.name = emitterOptions.name;\r\n        let particlesOptions = Utils_1.Utils.deepExtend({}, this.emitterOptions.particles);\r\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\r\n        (_c = particlesOptions.move) !== null && _c !== void 0 ? _c : (particlesOptions.move = {});\r\n        (_d = (_g = particlesOptions.move).direction) !== null && _d !== void 0 ? _d : (_g.direction = this.emitterOptions.direction);\r\n        if (this.emitterOptions.spawnColor !== undefined) {\r\n            this.spawnColor = Utils_1.ColorUtils.colorToHsl(this.emitterOptions.spawnColor);\r\n        }\r\n        this.paused = !this.emitterOptions.autoPlay;\r\n        this.particlesOptions = particlesOptions;\r\n        this.size =\r\n            (_e = this.emitterOptions.size) !== null && _e !== void 0 ? _e : (() => {\r\n                const size = new EmitterSize_1.EmitterSize();\r\n                size.load({\r\n                    height: 0,\r\n                    mode: Enums_1.SizeMode.percent,\r\n                    width: 0,\r\n                });\r\n                return size;\r\n            })();\r\n        this.lifeCount = (_f = this.emitterOptions.life.count) !== null && _f !== void 0 ? _f : -1;\r\n        this.immortal = this.lifeCount <= 0;\r\n        this.play();\r\n    }\r\n    externalPlay() {\r\n        this.paused = false;\r\n        this.play();\r\n    }\r\n    externalPause() {\r\n        this.paused = true;\r\n        this.pause();\r\n    }\r\n    play() {\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        if (this.container.retina.reduceFactor &&\r\n            (this.lifeCount > 0 || this.immortal || !this.emitterOptions.life.count)) {\r\n            if (this.emitDelay === undefined) {\r\n                const delay = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.delay);\r\n                this.emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\r\n            }\r\n            if (this.lifeCount > 0 || this.immortal) {\r\n                this.prepareToDie();\r\n            }\r\n        }\r\n    }\r\n    pause() {\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        delete this.emitDelay;\r\n    }\r\n    resize() {\r\n        const initialPosition = this.initialPosition;\r\n        this.position =\r\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\r\n                ? initialPosition\r\n                : this.calcPosition();\r\n    }\r\n    update(delta) {\r\n        var _a, _b, _c;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        if (this.firstSpawn) {\r\n            this.firstSpawn = false;\r\n            this.currentSpawnDelay = (_a = this.spawnDelay) !== null && _a !== void 0 ? _a : 0;\r\n            this.currentEmitDelay = (_b = this.emitDelay) !== null && _b !== void 0 ? _b : 0;\r\n            delta.value = 0;\r\n        }\r\n        if (this.duration !== undefined) {\r\n            this.currentDuration += delta.value;\r\n            if (this.currentDuration >= this.duration) {\r\n                this.pause();\r\n                if (this.spawnDelay !== undefined) {\r\n                    delete this.spawnDelay;\r\n                }\r\n                if (!this.immortal) {\r\n                    this.lifeCount--;\r\n                }\r\n                if (this.lifeCount > 0 || this.immortal) {\r\n                    this.position = this.calcPosition();\r\n                    this.spawnDelay =\r\n                        (((_c = this.emitterOptions.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\r\n                }\r\n                else {\r\n                    this.destroy();\r\n                }\r\n                this.currentDuration -= this.duration;\r\n                delete this.duration;\r\n            }\r\n        }\r\n        if (this.spawnDelay !== undefined) {\r\n            this.currentSpawnDelay += delta.value;\r\n            if (this.currentSpawnDelay >= this.spawnDelay) {\r\n                this.play();\r\n                this.currentSpawnDelay -= this.currentSpawnDelay;\r\n                delete this.spawnDelay;\r\n            }\r\n        }\r\n        if (this.emitDelay !== undefined) {\r\n            this.currentEmitDelay += delta.value;\r\n            if (this.currentEmitDelay >= this.emitDelay) {\r\n                this.emit();\r\n                this.currentEmitDelay -= this.emitDelay;\r\n            }\r\n        }\r\n    }\r\n    prepareToDie() {\r\n        var _a;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        const duration = (_a = this.emitterOptions.life) === null || _a === void 0 ? void 0 : _a.duration;\r\n        if (this.container.retina.reduceFactor &&\r\n            (this.lifeCount > 0 || this.immortal) &&\r\n            duration !== undefined &&\r\n            duration > 0) {\r\n            this.duration = duration * 1000;\r\n        }\r\n    }\r\n    destroy() {\r\n        this.emitters.removeEmitter(this);\r\n    }\r\n    calcPosition() {\r\n        var _a, _b;\r\n        const container = this.container;\r\n        const percentPosition = this.emitterOptions.position;\r\n        return {\r\n            x: (((_a = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.x) !== null && _a !== void 0 ? _a : Math.random() * 100) / 100) * container.canvas.size.width,\r\n            y: (((_b = percentPosition === null || percentPosition === void 0 ? void 0 : percentPosition.y) !== null && _b !== void 0 ? _b : Math.random() * 100) / 100) * container.canvas.size.height,\r\n        };\r\n    }\r\n    emit() {\r\n        var _a;\r\n        if (this.paused) {\r\n            return;\r\n        }\r\n        const container = this.container;\r\n        const position = this.position;\r\n        const offset = {\r\n            x: this.size.mode === Enums_1.SizeMode.percent\r\n                ? (container.canvas.size.width * this.size.width) / 100\r\n                : this.size.width,\r\n            y: this.size.mode === Enums_1.SizeMode.percent\r\n                ? (container.canvas.size.height * this.size.height) / 100\r\n                : this.size.height,\r\n        };\r\n        const quantity = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.quantity);\r\n        for (let i = 0; i < quantity; i++) {\r\n            const particlesOptions = Utils_1.Utils.deepExtend({}, this.particlesOptions);\r\n            if (this.spawnColor !== undefined) {\r\n                const colorAnimation = (_a = this.emitterOptions.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\r\n                if (colorAnimation) {\r\n                    const hueAnimation = colorAnimation;\r\n                    if (hueAnimation.enable) {\r\n                        this.spawnColor.h = this.setColorAnimation(hueAnimation, this.spawnColor.h, 360);\r\n                    }\r\n                    else {\r\n                        const hslAnimation = colorAnimation;\r\n                        this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\r\n                        this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\r\n                        this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\r\n                    }\r\n                }\r\n                if (!particlesOptions.color) {\r\n                    particlesOptions.color = {\r\n                        value: this.spawnColor,\r\n                    };\r\n                }\r\n                else {\r\n                    particlesOptions.color.value = this.spawnColor;\r\n                }\r\n            }\r\n            container.particles.addParticle(randomPosition(position, offset), particlesOptions);\r\n        }\r\n    }\r\n    setColorAnimation(animation, initValue, maxValue) {\r\n        var _a;\r\n        const container = this.container;\r\n        if (!animation.enable) {\r\n            return initValue;\r\n        }\r\n        const colorOffset = Utils_1.NumberUtils.randomInRange(animation.offset);\r\n        const delay = Utils_1.NumberUtils.getRangeValue(this.emitterOptions.rate.delay);\r\n        const emitFactor = (1000 * delay) / container.retina.reduceFactor;\r\n        const colorSpeed = (_a = animation.speed) !== null && _a !== void 0 ? _a : 0;\r\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\r\n    }\r\n}\r\nexports.EmitterInstance = EmitterInstance;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}