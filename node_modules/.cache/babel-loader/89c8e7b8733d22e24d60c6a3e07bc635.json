{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/matth/Desktop/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Retina = /*#__PURE__*/function () {\n  function Retina(container) {\n    _classCallCheck(this, Retina);\n\n    this.container = container;\n  }\n\n  _createClass(Retina, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var container = this.container;\n      var options = container.actualOptions;\n      this.pixelRatio = !options.detectRetina || Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n      var motionOptions = this.container.actualOptions.motion;\n\n      if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n        if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n          this.reduceFactor = 1;\n        } else {\n          var mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n\n          if (mediaQuery) {\n            this.handleMotionChange(mediaQuery);\n\n            var handleChange = function handleChange() {\n              _this.handleMotionChange(mediaQuery);\n\n              container.refresh().catch(function () {});\n            };\n\n            if (mediaQuery.addEventListener !== undefined) {\n              mediaQuery.addEventListener(\"change\", handleChange);\n            } else if (mediaQuery.addListener !== undefined) {\n              mediaQuery.addListener(handleChange);\n            }\n          }\n        }\n      } else {\n        this.reduceFactor = 1;\n      }\n\n      var ratio = this.pixelRatio;\n\n      if (container.canvas.element) {\n        var element = container.canvas.element;\n        container.canvas.size.width = element.offsetWidth * ratio;\n        container.canvas.size.height = element.offsetHeight * ratio;\n      }\n\n      var particles = options.particles;\n      this.attractDistance = particles.move.attract.distance * ratio;\n      this.linksDistance = particles.links.distance * ratio;\n      this.linksWidth = particles.links.width * ratio;\n      this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n      this.maxSpeed = particles.move.gravity.maxSpeed * ratio;\n      var modes = options.interactivity.modes;\n      this.connectModeDistance = modes.connect.distance * ratio;\n      this.connectModeRadius = modes.connect.radius * ratio;\n      this.grabModeDistance = modes.grab.distance * ratio;\n      this.repulseModeDistance = modes.repulse.distance * ratio;\n      this.bounceModeDistance = modes.bounce.distance * ratio;\n      this.attractModeDistance = modes.attract.distance * ratio;\n      this.slowModeRadius = modes.slow.radius * ratio;\n      this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n      if (modes.bubble.size) {\n        this.bubbleModeSize = modes.bubble.size * ratio;\n      }\n    }\n  }, {\n    key: \"initParticle\",\n    value: function initParticle(particle) {\n      var particlesOptions = particle.options;\n      var ratio = this.pixelRatio;\n      particle.attractDistance = particlesOptions.move.attract.distance * ratio;\n      particle.linksDistance = particlesOptions.links.distance * ratio;\n      particle.linksWidth = particlesOptions.links.width * ratio;\n      particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n      particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n      particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n      particle.maxDistance = particlesOptions.move.distance * ratio;\n      particle.wobbleDistance = Utils_1.NumberUtils.getRangeValue(particlesOptions.wobble.distance) * ratio;\n      particle.maxSpeed = particlesOptions.move.gravity.maxSpeed * ratio;\n    }\n  }, {\n    key: \"handleMotionChange\",\n    value: function handleMotionChange(mediaQuery) {\n      var options = this.container.actualOptions;\n\n      if (mediaQuery.matches) {\n        var motion = options.motion;\n        this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n      } else {\n        this.reduceFactor = 1;\n      }\n    }\n  }]);\n\n  return Retina;\n}();\n\nexports.Retina = Retina;","map":{"version":3,"sources":["C:/Users/matth/Desktop/React Portfolio Website/node_modules/tsparticles/Core/Retina.js"],"names":["Object","defineProperty","exports","value","Retina","Utils_1","require","container","options","actualOptions","pixelRatio","detectRetina","Utils","isSsr","window","devicePixelRatio","motionOptions","motion","disable","reduce","matchMedia","reduceFactor","mediaQuery","handleMotionChange","handleChange","refresh","catch","addEventListener","undefined","addListener","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","linksDistance","links","linksWidth","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","modes","interactivity","connectModeDistance","connect","connectModeRadius","radius","grabModeDistance","grab","repulseModeDistance","repulse","bounceModeDistance","bounce","attractModeDistance","slowModeRadius","slow","bubbleModeDistance","bubble","bubbleModeSize","particle","particlesOptions","moveDrift","NumberUtils","getRangeValue","drift","moveSpeed","maxDistance","wobbleDistance","wobble","matches","factor"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Retina = void 0;\nconst Utils_1 = require(\"../Utils\");\nclass Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container;\n        const options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n        const motionOptions = this.container.actualOptions.motion;\n        if (motionOptions && (motionOptions.disable || motionOptions.reduce.value)) {\n            if (Utils_1.Utils.isSsr() || typeof matchMedia === \"undefined\" || !matchMedia) {\n                this.reduceFactor = 1;\n            }\n            else {\n                const mediaQuery = matchMedia(\"(prefers-reduced-motion: reduce)\");\n                if (mediaQuery) {\n                    this.handleMotionChange(mediaQuery);\n                    const handleChange = () => {\n                        this.handleMotionChange(mediaQuery);\n                        container.refresh().catch(() => {\n                        });\n                    };\n                    if (mediaQuery.addEventListener !== undefined) {\n                        mediaQuery.addEventListener(\"change\", handleChange);\n                    }\n                    else if (mediaQuery.addListener !== undefined) {\n                        mediaQuery.addListener(handleChange);\n                    }\n                }\n            }\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = particles.move.attract.distance * ratio;\n        this.linksDistance = particles.links.distance * ratio;\n        this.linksWidth = particles.links.width * ratio;\n        this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n        this.maxSpeed = particles.move.gravity.maxSpeed * ratio;\n        const modes = options.interactivity.modes;\n        this.connectModeDistance = modes.connect.distance * ratio;\n        this.connectModeRadius = modes.connect.radius * ratio;\n        this.grabModeDistance = modes.grab.distance * ratio;\n        this.repulseModeDistance = modes.repulse.distance * ratio;\n        this.bounceModeDistance = modes.bounce.distance * ratio;\n        this.attractModeDistance = modes.attract.distance * ratio;\n        this.slowModeRadius = modes.slow.radius * ratio;\n        this.bubbleModeDistance = modes.bubble.distance * ratio;\n        if (modes.bubble.size) {\n            this.bubbleModeSize = modes.bubble.size * ratio;\n        }\n    }\n    initParticle(particle) {\n        const particlesOptions = particle.options;\n        const ratio = this.pixelRatio;\n        particle.attractDistance = particlesOptions.move.attract.distance * ratio;\n        particle.linksDistance = particlesOptions.links.distance * ratio;\n        particle.linksWidth = particlesOptions.links.width * ratio;\n        particle.moveDrift = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.drift) * ratio;\n        particle.moveSpeed = Utils_1.NumberUtils.getRangeValue(particlesOptions.move.speed) * ratio;\n        particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n        particle.maxDistance = particlesOptions.move.distance * ratio;\n        particle.wobbleDistance = Utils_1.NumberUtils.getRangeValue(particlesOptions.wobble.distance) * ratio;\n        particle.maxSpeed = particlesOptions.move.gravity.maxSpeed * ratio;\n    }\n    handleMotionChange(mediaQuery) {\n        const options = this.container.actualOptions;\n        if (mediaQuery.matches) {\n            const motion = options.motion;\n            this.reduceFactor = motion.disable ? 0 : motion.reduce.value ? 1 / motion.reduce.factor : 1;\n        }\n        else {\n            this.reduceFactor = 1;\n        }\n    }\n}\nexports.Retina = Retina;\n"]},"metadata":{},"sourceType":"script"}