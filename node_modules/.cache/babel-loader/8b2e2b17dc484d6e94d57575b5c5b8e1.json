{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Split = void 0;\nvar SplitFactor_1 = require(\"./SplitFactor\");\nvar SplitRate_1 = require(\"./SplitRate\");\nvar Utils_1 = require(\"../../../../Utils\");\nvar Split = /*#__PURE__*/function () {\n  function Split() {\n    _classCallCheck(this, Split);\n    this.count = 1;\n    this.factor = new SplitFactor_1.SplitFactor();\n    this.rate = new SplitRate_1.SplitRate();\n    this.sizeOffset = true;\n  }\n  _createClass(Split, [{\n    key: \"load\",\n    value: function load(data) {\n      if (!data) {\n        return;\n      }\n      if (data.count !== undefined) {\n        this.count = data.count;\n      }\n      this.factor.load(data.factor);\n      this.rate.load(data.rate);\n      if (data.particles !== undefined) {\n        this.particles = Utils_1.Utils.deepExtend({}, data.particles);\n      }\n      if (data.sizeOffset !== undefined) {\n        this.sizeOffset = data.sizeOffset;\n      }\n    }\n  }]);\n  return Split;\n}();\nexports.Split = Split;","map":{"version":3,"names":["_classCallCheck","require","_createClass","Object","defineProperty","exports","value","Split","SplitFactor_1","SplitRate_1","Utils_1","count","factor","SplitFactor","rate","SplitRate","sizeOffset","key","load","data","undefined","particles","Utils","deepExtend"],"sources":["C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Options/Classes/Particles/Destroy/Split.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Split = void 0;\r\nconst SplitFactor_1 = require(\"./SplitFactor\");\r\nconst SplitRate_1 = require(\"./SplitRate\");\r\nconst Utils_1 = require(\"../../../../Utils\");\r\nclass Split {\r\n    constructor() {\r\n        this.count = 1;\r\n        this.factor = new SplitFactor_1.SplitFactor();\r\n        this.rate = new SplitRate_1.SplitRate();\r\n        this.sizeOffset = true;\r\n    }\r\n    load(data) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        if (data.count !== undefined) {\r\n            this.count = data.count;\r\n        }\r\n        this.factor.load(data.factor);\r\n        this.rate.load(data.rate);\r\n        if (data.particles !== undefined) {\r\n            this.particles = Utils_1.Utils.deepExtend({}, data.particles);\r\n        }\r\n        if (data.sizeOffset !== undefined) {\r\n            this.sizeOffset = data.sizeOffset;\r\n        }\r\n    }\r\n}\r\nexports.Split = Split;\r\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,eAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA,GAAAD,OAAA;AACbE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,KAAK,GAAG,KAAK,CAAC;AACtB,IAAMC,aAAa,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC9C,IAAMQ,WAAW,GAAGR,OAAO,CAAC,aAAa,CAAC;AAC1C,IAAMS,OAAO,GAAGT,OAAO,CAAC,mBAAmB,CAAC;AAAC,IACvCM,KAAK;EACP,SAAAA,MAAA,EAAc;IAAAP,eAAA,OAAAO,KAAA;IACV,IAAI,CAACI,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,MAAM,GAAG,IAAIJ,aAAa,CAACK,WAAW,EAAE;IAC7C,IAAI,CAACC,IAAI,GAAG,IAAIL,WAAW,CAACM,SAAS,EAAE;IACvC,IAAI,CAACC,UAAU,GAAG,IAAI;EAC1B;EAACd,YAAA,CAAAK,KAAA;IAAAU,GAAA;IAAAX,KAAA,EACD,SAAAY,KAAKC,IAAI,EAAE;MACP,IAAI,CAACA,IAAI,EAAE;QACP;MACJ;MACA,IAAIA,IAAI,CAACR,KAAK,KAAKS,SAAS,EAAE;QAC1B,IAAI,CAACT,KAAK,GAAGQ,IAAI,CAACR,KAAK;MAC3B;MACA,IAAI,CAACC,MAAM,CAACM,IAAI,CAACC,IAAI,CAACP,MAAM,CAAC;MAC7B,IAAI,CAACE,IAAI,CAACI,IAAI,CAACC,IAAI,CAACL,IAAI,CAAC;MACzB,IAAIK,IAAI,CAACE,SAAS,KAAKD,SAAS,EAAE;QAC9B,IAAI,CAACC,SAAS,GAAGX,OAAO,CAACY,KAAK,CAACC,UAAU,CAAC,CAAC,CAAC,EAAEJ,IAAI,CAACE,SAAS,CAAC;MACjE;MACA,IAAIF,IAAI,CAACH,UAAU,KAAKI,SAAS,EAAE;QAC/B,IAAI,CAACJ,UAAU,GAAGG,IAAI,CAACH,UAAU;MACrC;IACJ;EAAC;EAAA,OAAAT,KAAA;AAAA;AAELF,OAAO,CAACE,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script"}