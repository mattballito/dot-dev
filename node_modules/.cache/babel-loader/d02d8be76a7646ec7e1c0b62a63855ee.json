{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanvasUtils = void 0;\nvar ColorUtils_1 = require(\"./ColorUtils\");\nvar NumberUtils_1 = require(\"./NumberUtils\");\nfunction drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\nvar CanvasUtils = /*#__PURE__*/function () {\n  function CanvasUtils() {\n    _classCallCheck(this, CanvasUtils);\n  }\n  _createClass(CanvasUtils, null, [{\n    key: \"paintBase\",\n    value: function paintBase(context, dimension, baseColor) {\n      context.save();\n      context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n      context.fillRect(0, 0, dimension.width, dimension.height);\n      context.restore();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(context, dimension) {\n      context.clearRect(0, 0, dimension.width, dimension.height);\n    }\n  }, {\n    key: \"drawLinkLine\",\n    value: function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n      var drawn = false;\n      if (NumberUtils_1.NumberUtils.getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n      } else if (warp) {\n        var pi1;\n        var pi2;\n        var endNE = {\n          x: end.x - canvasSize.width,\n          y: end.y\n        };\n        var d1 = NumberUtils_1.NumberUtils.getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n          var yi = begin.y - d1.dy / d1.dx * begin.x;\n          pi1 = {\n            x: 0,\n            y: yi\n          };\n          pi2 = {\n            x: canvasSize.width,\n            y: yi\n          };\n        } else {\n          var endSW = {\n            x: end.x,\n            y: end.y - canvasSize.height\n          };\n          var d2 = NumberUtils_1.NumberUtils.getDistances(begin, endSW);\n          if (d2.distance <= maxDistance) {\n            var _yi = begin.y - d2.dy / d2.dx * begin.x;\n            var xi = -_yi / (d2.dy / d2.dx);\n            pi1 = {\n              x: xi,\n              y: 0\n            };\n            pi2 = {\n              x: xi,\n              y: canvasSize.height\n            };\n          } else {\n            var endSE = {\n              x: end.x - canvasSize.width,\n              y: end.y - canvasSize.height\n            };\n            var d3 = NumberUtils_1.NumberUtils.getDistances(begin, endSE);\n            if (d3.distance <= maxDistance) {\n              var _yi2 = begin.y - d3.dy / d3.dx * begin.x;\n              var _xi = -_yi2 / (d3.dy / d3.dx);\n              pi1 = {\n                x: _xi,\n                y: _yi2\n              };\n              pi2 = {\n                x: pi1.x + canvasSize.width,\n                y: pi1.y + canvasSize.height\n              };\n            }\n          }\n        }\n        if (pi1 && pi2) {\n          drawLine(context, begin, pi1);\n          drawLine(context, end, pi2);\n          drawn = true;\n        }\n      }\n      if (!drawn) {\n        return;\n      }\n      context.lineWidth = width;\n      if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n      }\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n      if (shadow.enable) {\n        var shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\n        if (shadowColor) {\n          context.shadowBlur = shadow.blur;\n          context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n        }\n      }\n      context.stroke();\n    }\n  }, {\n    key: \"drawLinkTriangle\",\n    value: function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n      drawTriangle(context, pos1, pos2, pos3);\n      if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n      }\n      context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\n      context.fill();\n    }\n  }, {\n    key: \"drawConnectLine\",\n    value: function drawConnectLine(context, width, lineStyle, begin, end) {\n      context.save();\n      drawLine(context, begin, end);\n      context.lineWidth = width;\n      context.strokeStyle = lineStyle;\n      context.stroke();\n      context.restore();\n    }\n  }, {\n    key: \"gradient\",\n    value: function gradient(context, p1, p2, opacity) {\n      var gradStop = Math.floor(p2.getRadius() / p1.getRadius());\n      var color1 = p1.getFillColor();\n      var color2 = p2.getFillColor();\n      if (!color1 || !color2) {\n        return;\n      }\n      var sourcePos = p1.getPosition();\n      var destPos = p2.getPosition();\n      var midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.getRadius(), p2.getRadius());\n      var grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n      grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\n      grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\n      grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\n      return grad;\n    }\n  }, {\n    key: \"drawGrabLine\",\n    value: function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n      context.save();\n      drawLine(context, begin, end);\n      context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\n      context.lineWidth = width;\n      context.stroke();\n      context.restore();\n    }\n  }, {\n    key: \"drawLight\",\n    value: function drawLight(container, context, mousePos) {\n      var lightOptions = container.actualOptions.interactivity.modes.light.area;\n      context.beginPath();\n      context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\n      var gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\n      var gradient = lightOptions.gradient;\n      var gradientRgb = {\n        start: ColorUtils_1.ColorUtils.colorToRgb(gradient.start),\n        stop: ColorUtils_1.ColorUtils.colorToRgb(gradient.stop)\n      };\n      if (!gradientRgb.start || !gradientRgb.stop) {\n        return;\n      }\n      gradientAmbientLight.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.start));\n      gradientAmbientLight.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.stop));\n      context.fillStyle = gradientAmbientLight;\n      context.fill();\n    }\n  }, {\n    key: \"drawParticleShadow\",\n    value: function drawParticleShadow(container, context, particle, mousePos) {\n      var pos = particle.getPosition();\n      var shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\n      context.save();\n      var radius = particle.getRadius();\n      var sides = particle.sides;\n      var full = Math.PI * 2 / sides;\n      var angle = -particle.rotate.value + Math.PI / 4;\n      var factor = 1;\n      var dots = [];\n      for (var i = 0; i < sides; i++) {\n        dots.push({\n          x: pos.x + radius * Math.sin(angle + full * i) * factor,\n          y: pos.y + radius * Math.cos(angle + full * i) * factor\n        });\n      }\n      var points = [];\n      var shadowLength = shadowOptions.length;\n      for (var _i = 0, _dots = dots; _i < _dots.length; _i++) {\n        var dot = _dots[_i];\n        var dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\n        var endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\n        var endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\n        points.push({\n          endX: endX,\n          endY: endY,\n          startX: dot.x,\n          startY: dot.y\n        });\n      }\n      var shadowRgb = ColorUtils_1.ColorUtils.colorToRgb(shadowOptions.color);\n      if (!shadowRgb) {\n        return;\n      }\n      var shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowRgb);\n      for (var _i2 = points.length - 1; _i2 >= 0; _i2--) {\n        var n = _i2 == points.length - 1 ? 0 : _i2 + 1;\n        context.beginPath();\n        context.moveTo(points[_i2].startX, points[_i2].startY);\n        context.lineTo(points[n].startX, points[n].startY);\n        context.lineTo(points[n].endX, points[n].endY);\n        context.lineTo(points[_i2].endX, points[_i2].endY);\n        context.fillStyle = shadowColor;\n        context.fill();\n      }\n      context.restore();\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\n      var pos = particle.getPosition();\n      var tiltOptions = particle.options.tilt;\n      var rollOptions = particle.options.roll;\n      context.save();\n      if (tiltOptions.enable || rollOptions.enable) {\n        context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\n      } else {\n        context.translate(pos.x, pos.y);\n      }\n      context.beginPath();\n      var angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\n      if (angle !== 0) {\n        context.rotate(angle);\n      }\n      if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n      }\n      var shadowColor = particle.shadowColor;\n      if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n      }\n      if (fillColorValue) {\n        context.fillStyle = fillColorValue;\n      }\n      var stroke = particle.stroke;\n      context.lineWidth = particle.strokeWidth;\n      if (strokeColorValue) {\n        context.strokeStyle = strokeColorValue;\n      }\n      CanvasUtils.drawShape(container, context, particle, radius, opacity, delta);\n      if (stroke.width > 0) {\n        context.stroke();\n      }\n      if (particle.close) {\n        context.closePath();\n      }\n      if (particle.fill) {\n        context.fill();\n      }\n      context.restore();\n      context.save();\n      if (tiltOptions.enable) {\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n      } else {\n        context.translate(pos.x, pos.y);\n      }\n      if (angle !== 0) {\n        context.rotate(angle);\n      }\n      if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n      }\n      CanvasUtils.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n      context.restore();\n    }\n  }, {\n    key: \"drawShape\",\n    value: function drawShape(container, context, particle, radius, opacity, delta) {\n      if (!particle.shape) {\n        return;\n      }\n      var drawer = container.drawers.get(particle.shape);\n      if (!drawer) {\n        return;\n      }\n      drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n  }, {\n    key: \"drawShapeAfterEffect\",\n    value: function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n      if (!particle.shape) {\n        return;\n      }\n      var drawer = container.drawers.get(particle.shape);\n      if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n      }\n      drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(context, plugin, delta) {\n      if (plugin.draw !== undefined) {\n        context.save();\n        plugin.draw(context, delta);\n        context.restore();\n      }\n    }\n  }]);\n  return CanvasUtils;\n}();\nexports.CanvasUtils = CanvasUtils;","map":{"version":3,"names":["_classCallCheck","require","_createClass","Object","defineProperty","exports","value","CanvasUtils","ColorUtils_1","NumberUtils_1","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","key","paintBase","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clear","clearRect","drawLinkLine","maxDistance","canvasSize","warp","backgroundMask","composite","colorLine","opacity","shadow","drawn","NumberUtils","getDistance","pi1","pi2","endNE","d1","getDistances","distance","yi","dy","dx","endSW","d2","xi","endSE","d3","lineWidth","globalCompositeOperation","strokeStyle","ColorUtils","getStyleFromRgb","enable","shadowColor","colorToRgb","color","shadowBlur","blur","stroke","drawLinkTriangle","pos1","pos2","pos3","colorTriangle","opacityTriangle","fill","drawConnectLine","lineStyle","gradient","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","mix","grad","createLinearGradient","addColorStop","getStyleFromHsl","drawGrabLine","drawLight","container","mousePos","lightOptions","actualOptions","interactivity","modes","light","area","arc","radius","PI","gradientAmbientLight","createRadialGradient","gradientRgb","start","stop","drawParticleShadow","particle","pos","shadowOptions","sides","full","angle","rotate","factor","dots","i","push","sin","cos","points","shadowLength","length","_i","_dots","dot","dotAngle","atan2","endX","endY","startX","startY","shadowRgb","n","drawParticle","delta","fillColorValue","strokeColorValue","tiltOptions","options","tilt","rollOptions","roll","setTransform","rollAngle","cosDirection","sinDirection","translate","path","velocity","shadowOffsetX","offset","shadowOffsetY","strokeWidth","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","undefined"],"sources":["C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Utils/CanvasUtils.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CanvasUtils = void 0;\r\nconst ColorUtils_1 = require(\"./ColorUtils\");\r\nconst NumberUtils_1 = require(\"./NumberUtils\");\r\nfunction drawLine(context, begin, end) {\r\n    context.beginPath();\r\n    context.moveTo(begin.x, begin.y);\r\n    context.lineTo(end.x, end.y);\r\n    context.closePath();\r\n}\r\nfunction drawTriangle(context, p1, p2, p3) {\r\n    context.beginPath();\r\n    context.moveTo(p1.x, p1.y);\r\n    context.lineTo(p2.x, p2.y);\r\n    context.lineTo(p3.x, p3.y);\r\n    context.closePath();\r\n}\r\nclass CanvasUtils {\r\n    static paintBase(context, dimension, baseColor) {\r\n        context.save();\r\n        context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\r\n        context.fillRect(0, 0, dimension.width, dimension.height);\r\n        context.restore();\r\n    }\r\n    static clear(context, dimension) {\r\n        context.clearRect(0, 0, dimension.width, dimension.height);\r\n    }\r\n    static drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\r\n        let drawn = false;\r\n        if (NumberUtils_1.NumberUtils.getDistance(begin, end) <= maxDistance) {\r\n            drawLine(context, begin, end);\r\n            drawn = true;\r\n        }\r\n        else if (warp) {\r\n            let pi1;\r\n            let pi2;\r\n            const endNE = {\r\n                x: end.x - canvasSize.width,\r\n                y: end.y,\r\n            };\r\n            const d1 = NumberUtils_1.NumberUtils.getDistances(begin, endNE);\r\n            if (d1.distance <= maxDistance) {\r\n                const yi = begin.y - (d1.dy / d1.dx) * begin.x;\r\n                pi1 = { x: 0, y: yi };\r\n                pi2 = { x: canvasSize.width, y: yi };\r\n            }\r\n            else {\r\n                const endSW = {\r\n                    x: end.x,\r\n                    y: end.y - canvasSize.height,\r\n                };\r\n                const d2 = NumberUtils_1.NumberUtils.getDistances(begin, endSW);\r\n                if (d2.distance <= maxDistance) {\r\n                    const yi = begin.y - (d2.dy / d2.dx) * begin.x;\r\n                    const xi = -yi / (d2.dy / d2.dx);\r\n                    pi1 = { x: xi, y: 0 };\r\n                    pi2 = { x: xi, y: canvasSize.height };\r\n                }\r\n                else {\r\n                    const endSE = {\r\n                        x: end.x - canvasSize.width,\r\n                        y: end.y - canvasSize.height,\r\n                    };\r\n                    const d3 = NumberUtils_1.NumberUtils.getDistances(begin, endSE);\r\n                    if (d3.distance <= maxDistance) {\r\n                        const yi = begin.y - (d3.dy / d3.dx) * begin.x;\r\n                        const xi = -yi / (d3.dy / d3.dx);\r\n                        pi1 = { x: xi, y: yi };\r\n                        pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\r\n                    }\r\n                }\r\n            }\r\n            if (pi1 && pi2) {\r\n                drawLine(context, begin, pi1);\r\n                drawLine(context, end, pi2);\r\n                drawn = true;\r\n            }\r\n        }\r\n        if (!drawn) {\r\n            return;\r\n        }\r\n        context.lineWidth = width;\r\n        if (backgroundMask) {\r\n            context.globalCompositeOperation = composite;\r\n        }\r\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\r\n        if (shadow.enable) {\r\n            const shadowColor = ColorUtils_1.ColorUtils.colorToRgb(shadow.color);\r\n            if (shadowColor) {\r\n                context.shadowBlur = shadow.blur;\r\n                context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\r\n            }\r\n        }\r\n        context.stroke();\r\n    }\r\n    static drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\r\n        drawTriangle(context, pos1, pos2, pos3);\r\n        if (backgroundMask) {\r\n            context.globalCompositeOperation = composite;\r\n        }\r\n        context.fillStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorTriangle, opacityTriangle);\r\n        context.fill();\r\n    }\r\n    static drawConnectLine(context, width, lineStyle, begin, end) {\r\n        context.save();\r\n        drawLine(context, begin, end);\r\n        context.lineWidth = width;\r\n        context.strokeStyle = lineStyle;\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n    static gradient(context, p1, p2, opacity) {\r\n        const gradStop = Math.floor(p2.getRadius() / p1.getRadius());\r\n        const color1 = p1.getFillColor();\r\n        const color2 = p2.getFillColor();\r\n        if (!color1 || !color2) {\r\n            return;\r\n        }\r\n        const sourcePos = p1.getPosition();\r\n        const destPos = p2.getPosition();\r\n        const midRgb = ColorUtils_1.ColorUtils.mix(color1, color2, p1.getRadius(), p2.getRadius());\r\n        const grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\r\n        grad.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromHsl(color1, opacity));\r\n        grad.addColorStop(gradStop > 1 ? 1 : gradStop, ColorUtils_1.ColorUtils.getStyleFromRgb(midRgb, opacity));\r\n        grad.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromHsl(color2, opacity));\r\n        return grad;\r\n    }\r\n    static drawGrabLine(context, width, begin, end, colorLine, opacity) {\r\n        context.save();\r\n        drawLine(context, begin, end);\r\n        context.strokeStyle = ColorUtils_1.ColorUtils.getStyleFromRgb(colorLine, opacity);\r\n        context.lineWidth = width;\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n    static drawLight(container, context, mousePos) {\r\n        const lightOptions = container.actualOptions.interactivity.modes.light.area;\r\n        context.beginPath();\r\n        context.arc(mousePos.x, mousePos.y, lightOptions.radius, 0, 2 * Math.PI);\r\n        const gradientAmbientLight = context.createRadialGradient(mousePos.x, mousePos.y, 0, mousePos.x, mousePos.y, lightOptions.radius);\r\n        const gradient = lightOptions.gradient;\r\n        const gradientRgb = {\r\n            start: ColorUtils_1.ColorUtils.colorToRgb(gradient.start),\r\n            stop: ColorUtils_1.ColorUtils.colorToRgb(gradient.stop),\r\n        };\r\n        if (!gradientRgb.start || !gradientRgb.stop) {\r\n            return;\r\n        }\r\n        gradientAmbientLight.addColorStop(0, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.start));\r\n        gradientAmbientLight.addColorStop(1, ColorUtils_1.ColorUtils.getStyleFromRgb(gradientRgb.stop));\r\n        context.fillStyle = gradientAmbientLight;\r\n        context.fill();\r\n    }\r\n    static drawParticleShadow(container, context, particle, mousePos) {\r\n        const pos = particle.getPosition();\r\n        const shadowOptions = container.actualOptions.interactivity.modes.light.shadow;\r\n        context.save();\r\n        const radius = particle.getRadius();\r\n        const sides = particle.sides;\r\n        const full = (Math.PI * 2) / sides;\r\n        const angle = -particle.rotate.value + Math.PI / 4;\r\n        const factor = 1;\r\n        const dots = [];\r\n        for (let i = 0; i < sides; i++) {\r\n            dots.push({\r\n                x: pos.x + radius * Math.sin(angle + full * i) * factor,\r\n                y: pos.y + radius * Math.cos(angle + full * i) * factor,\r\n            });\r\n        }\r\n        const points = [];\r\n        const shadowLength = shadowOptions.length;\r\n        for (const dot of dots) {\r\n            const dotAngle = Math.atan2(mousePos.y - dot.y, mousePos.x - dot.x);\r\n            const endX = dot.x + shadowLength * Math.sin(-dotAngle - Math.PI / 2);\r\n            const endY = dot.y + shadowLength * Math.cos(-dotAngle - Math.PI / 2);\r\n            points.push({\r\n                endX: endX,\r\n                endY: endY,\r\n                startX: dot.x,\r\n                startY: dot.y,\r\n            });\r\n        }\r\n        const shadowRgb = ColorUtils_1.ColorUtils.colorToRgb(shadowOptions.color);\r\n        if (!shadowRgb) {\r\n            return;\r\n        }\r\n        const shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowRgb);\r\n        for (let i = points.length - 1; i >= 0; i--) {\r\n            const n = i == points.length - 1 ? 0 : i + 1;\r\n            context.beginPath();\r\n            context.moveTo(points[i].startX, points[i].startY);\r\n            context.lineTo(points[n].startX, points[n].startY);\r\n            context.lineTo(points[n].endX, points[n].endY);\r\n            context.lineTo(points[i].endX, points[i].endY);\r\n            context.fillStyle = shadowColor;\r\n            context.fill();\r\n        }\r\n        context.restore();\r\n    }\r\n    static drawParticle(container, context, particle, delta, fillColorValue, strokeColorValue, backgroundMask, composite, radius, opacity, shadow) {\r\n        const pos = particle.getPosition();\r\n        const tiltOptions = particle.options.tilt;\r\n        const rollOptions = particle.options.roll;\r\n        context.save();\r\n        if (tiltOptions.enable || rollOptions.enable) {\r\n            context.setTransform(rollOptions.enable ? Math.cos(particle.rollAngle) : 1, tiltOptions.enable ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tiltOptions.enable ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollOptions.enable ? Math.sin(particle.rollAngle) : 1, pos.x, pos.y);\r\n        }\r\n        else {\r\n            context.translate(pos.x, pos.y);\r\n        }\r\n        context.beginPath();\r\n        const angle = particle.rotate.value + (particle.options.rotate.path ? particle.velocity.angle : 0);\r\n        if (angle !== 0) {\r\n            context.rotate(angle);\r\n        }\r\n        if (backgroundMask) {\r\n            context.globalCompositeOperation = composite;\r\n        }\r\n        const shadowColor = particle.shadowColor;\r\n        if (shadow.enable && shadowColor) {\r\n            context.shadowBlur = shadow.blur;\r\n            context.shadowColor = ColorUtils_1.ColorUtils.getStyleFromRgb(shadowColor);\r\n            context.shadowOffsetX = shadow.offset.x;\r\n            context.shadowOffsetY = shadow.offset.y;\r\n        }\r\n        if (fillColorValue) {\r\n            context.fillStyle = fillColorValue;\r\n        }\r\n        const stroke = particle.stroke;\r\n        context.lineWidth = particle.strokeWidth;\r\n        if (strokeColorValue) {\r\n            context.strokeStyle = strokeColorValue;\r\n        }\r\n        CanvasUtils.drawShape(container, context, particle, radius, opacity, delta);\r\n        if (stroke.width > 0) {\r\n            context.stroke();\r\n        }\r\n        if (particle.close) {\r\n            context.closePath();\r\n        }\r\n        if (particle.fill) {\r\n            context.fill();\r\n        }\r\n        context.restore();\r\n        context.save();\r\n        if (tiltOptions.enable) {\r\n            context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\r\n        }\r\n        else {\r\n            context.translate(pos.x, pos.y);\r\n        }\r\n        if (angle !== 0) {\r\n            context.rotate(angle);\r\n        }\r\n        if (backgroundMask) {\r\n            context.globalCompositeOperation = composite;\r\n        }\r\n        CanvasUtils.drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\r\n        context.restore();\r\n    }\r\n    static drawShape(container, context, particle, radius, opacity, delta) {\r\n        if (!particle.shape) {\r\n            return;\r\n        }\r\n        const drawer = container.drawers.get(particle.shape);\r\n        if (!drawer) {\r\n            return;\r\n        }\r\n        drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n    }\r\n    static drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\r\n        if (!particle.shape) {\r\n            return;\r\n        }\r\n        const drawer = container.drawers.get(particle.shape);\r\n        if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\r\n            return;\r\n        }\r\n        drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\r\n    }\r\n    static drawPlugin(context, plugin, delta) {\r\n        if (plugin.draw !== undefined) {\r\n            context.save();\r\n            plugin.draw(context, delta);\r\n            context.restore();\r\n        }\r\n    }\r\n}\r\nexports.CanvasUtils = CanvasUtils;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}