{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _createForOfIteratorHelper = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\nvar _classCallCheck = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Particles = void 0;\nvar Particle_1 = require(\"./Particle\");\nvar Utils_1 = require(\"../Utils\");\nvar InteractionManager_1 = require(\"./Particle/InteractionManager\");\nvar ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\nvar Particles = /*#__PURE__*/function () {\n  function Particles(container) {\n    _classCallCheck(this, Particles);\n    this.container = container;\n    this.nextId = 0;\n    this.array = [];\n    this.limit = 0;\n    this.linksFreq = new Map();\n    this.trianglesFreq = new Map();\n    this.interactionManager = new InteractionManager_1.InteractionManager(container);\n    var canvasSize = this.container.canvas.size;\n    this.linksColors = new Map();\n    this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n  }\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var container = this.container;\n      var options = container.actualOptions;\n      this.linksFreq = new Map();\n      this.trianglesFreq = new Map();\n      var handled = false;\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          var pos = particle.position ? {\n            x: particle.position.x * container.canvas.size.width / 100,\n            y: particle.position.y * container.canvas.size.height / 100\n          } : undefined;\n          this.addParticle(pos, particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      var _iterator2 = _createForOfIteratorHelper(container.plugins),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            plugin = _step2$value[1];\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (!handled) {\n        for (var i = this.count; i < options.particles.number.value; i++) {\n          this.addParticle();\n        }\n      }\n      if (options.infection.enable) {\n        for (var _i = 0; _i < options.infection.infections; _i++) {\n          var notInfected = this.array.filter(function (p) {\n            return p.infecter.infectionStage === undefined;\n          });\n          var infected = Utils_1.Utils.itemFromArray(notInfected);\n          infected.infecter.startInfection(0);\n        }\n      }\n      this.interactionManager.init();\n      container.pathGenerator.init();\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.clear();\n      this.init();\n      this.draw({\n        value: 0,\n        factor: 0\n      });\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index, quantity, override) {\n      if (index >= 0 && index <= this.count) {\n        var _iterator3 = _createForOfIteratorHelper(this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var particle = _step3.value;\n            particle.destroy(override);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(particle, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, override);\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var container = this.container;\n      var particlesToDelete = [];\n      container.pathGenerator.update();\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n            plugin = _step4$value[1];\n          if (plugin.update !== undefined) {\n            plugin.update(delta);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      var _iterator5 = _createForOfIteratorHelper(this.array),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _particle = _step5.value;\n          var resizeFactor = this.container.canvas.resizeFactor;\n          if (resizeFactor) {\n            _particle.position.x *= resizeFactor.width;\n            _particle.position.y *= resizeFactor.height;\n          }\n          _particle.move(delta);\n          if (_particle.destroyed) {\n            particlesToDelete.push(_particle);\n            continue;\n          }\n          this.quadTree.insert(new Utils_1.Point(_particle.getPosition(), _particle));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      for (var _i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n        var particle = _particlesToDelete[_i2];\n        this.remove(particle);\n      }\n      this.interactionManager.externalInteract(delta);\n      var _iterator6 = _createForOfIteratorHelper(this.container.particles.array),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _particle2 = _step6.value;\n          _particle2.update(delta);\n          if (!_particle2.destroyed && !_particle2.spawning) {\n            this.interactionManager.particlesInteract(_particle2, delta);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      delete container.canvas.resizeFactor;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n      container.canvas.clear();\n      var canvasSize = this.container.canvas.size;\n      this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n      this.update(delta);\n      var _iterator7 = _createForOfIteratorHelper(container.plugins),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n            plugin = _step7$value[1];\n          container.canvas.drawPlugin(plugin, delta);\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      var _iterator8 = _createForOfIteratorHelper(this.array),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var p = _step8.value;\n          p.draw(delta);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions) {\n      this.pushing = true;\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\n      }\n      this.pushing = false;\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions) {\n      var container = this.container;\n      var options = container.actualOptions;\n      var limit = options.particles.number.limit * container.density;\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n      return this.pushParticle(position, overrideOptions);\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent) {\n      var splitOptions = parent.options.destroy.split;\n      var options = new ParticlesOptions_1.ParticlesOptions();\n      options.load(parent.options);\n      var factor = Utils_1.NumberUtils.getRangeValue(splitOptions.factor.value);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n      options.load(splitOptions.particles);\n      var offset = splitOptions.sizeOffset ? Utils_1.NumberUtils.setRangeValue(-parent.size.value, parent.size.value) : 0;\n      var position = {\n        x: parent.position.x + Utils_1.NumberUtils.randomInRange(offset),\n        y: parent.position.y + Utils_1.NumberUtils.randomInRange(offset)\n      };\n      return this.pushParticle(position, options, function (particle) {\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n        particle.velocity.length = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = parent.splitCount + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity) {\n      this.removeAt(0, quantity);\n    }\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var key = \"\".concat(Math.min(p1.id, p2.id), \"_\").concat(Math.max(p1.id, p2.id));\n      var res = this.linksFreq.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.linksFreq.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n        id1 = _ref[0],\n        id2 = _ref[1],\n        id3 = _ref[2];\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.trianglesFreq.get(key);\n      if (res === undefined) {\n        res = Math.random();\n        this.trianglesFreq.set(key, res);\n      }\n      return res;\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      this.applyDensity(this.container.actualOptions.particles);\n    }\n  }, {\n    key: \"applyDensity\",\n    value: function applyDensity(options) {\n      var _a;\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n      var numberOptions = options.number;\n      var densityFactor = this.initDensityFactor(numberOptions.density);\n      var optParticlesNumber = numberOptions.value;\n      var optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      var particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\n      var particlesCount = this.count;\n      this.limit = numberOptions.limit * densityFactor;\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber);\n      }\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor(densityOptions) {\n      var container = this.container;\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n      var canvas = container.canvas.element;\n      var pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"pushParticle\",\n    value: function pushParticle(position, overrideOptions, initializer) {\n      try {\n        var particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\n        var canAdd = true;\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n        if (!canAdd) {\n          return;\n        }\n        this.array.push(particle);\n        this.nextId++;\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n  return Particles;\n}();\nexports.Particles = Particles;","map":{"version":3,"names":["_slicedToArray","require","_createForOfIteratorHelper","_classCallCheck","_createClass","Object","defineProperty","exports","value","Particles","Particle_1","Utils_1","InteractionManager_1","ParticlesOptions_1","container","nextId","array","limit","linksFreq","Map","trianglesFreq","interactionManager","InteractionManager","canvasSize","canvas","size","linksColors","quadTree","QuadTree","Rectangle","width","height","key","get","length","init","options","actualOptions","handled","_iterator","manualParticles","_step","s","n","done","particle","pos","position","x","y","undefined","addParticle","err","e","f","_iterator2","plugins","_step2","_step2$value","plugin","particlesInitialization","i","count","particles","number","infection","enable","infections","notInfected","filter","p","infecter","infectionStage","infected","Utils","itemFromArray","startInfection","pathGenerator","redraw","clear","draw","factor","removeAt","index","quantity","override","_iterator3","splice","_step3","destroy","remove","indexOf","update","delta","particlesToDelete","_iterator4","_step4","_step4$value","_iterator5","_step5","resizeFactor","move","destroyed","push","insert","Point","getPosition","_i2","_particlesToDelete","externalInteract","_iterator6","_step6","spawning","particlesInteract","_iterator7","_step7","_step7$value","drawPlugin","_iterator8","_step8","nb","mouse","overrideOptions","pushing","density","countToRemove","removeQuantity","pushParticle","addSplitParticle","parent","splitOptions","split","ParticlesOptions","load","NumberUtils","getRangeValue","color","hsl","getFillColor","min","max","offset","sizeOffset","setRangeValue","randomInRange","velocity","splitCount","unbreakable","setTimeout","getLinkFrequency","p1","p2","concat","Math","id","res","random","set","getTriangleFrequency","p3","_ref","id1","id2","id3","_ref2","_ref3","_ref4","setDensity","applyDensity","_a","numberOptions","densityFactor","initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","abs","densityOptions","element","pxRatio","retina","pixelRatio","pow","area","initializer","Particle","canAdd","console","warn"],"sources":["C:/Users/matth/Desktop/dotDev/Portfolio/React Portfolio Website/node_modules/tsparticles/Core/Particles.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Particles = void 0;\r\nconst Particle_1 = require(\"./Particle\");\r\nconst Utils_1 = require(\"../Utils\");\r\nconst InteractionManager_1 = require(\"./Particle/InteractionManager\");\r\nconst ParticlesOptions_1 = require(\"../Options/Classes/Particles/ParticlesOptions\");\r\nclass Particles {\r\n    constructor(container) {\r\n        this.container = container;\r\n        this.nextId = 0;\r\n        this.array = [];\r\n        this.limit = 0;\r\n        this.linksFreq = new Map();\r\n        this.trianglesFreq = new Map();\r\n        this.interactionManager = new InteractionManager_1.InteractionManager(container);\r\n        const canvasSize = this.container.canvas.size;\r\n        this.linksColors = new Map();\r\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\r\n    }\r\n    get count() {\r\n        return this.array.length;\r\n    }\r\n    init() {\r\n        const container = this.container;\r\n        const options = container.actualOptions;\r\n        this.linksFreq = new Map();\r\n        this.trianglesFreq = new Map();\r\n        let handled = false;\r\n        for (const particle of options.manualParticles) {\r\n            const pos = particle.position\r\n                ? {\r\n                    x: (particle.position.x * container.canvas.size.width) / 100,\r\n                    y: (particle.position.y * container.canvas.size.height) / 100,\r\n                }\r\n                : undefined;\r\n            this.addParticle(pos, particle.options);\r\n        }\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.particlesInitialization !== undefined) {\r\n                handled = plugin.particlesInitialization();\r\n            }\r\n            if (handled) {\r\n                break;\r\n            }\r\n        }\r\n        if (!handled) {\r\n            for (let i = this.count; i < options.particles.number.value; i++) {\r\n                this.addParticle();\r\n            }\r\n        }\r\n        if (options.infection.enable) {\r\n            for (let i = 0; i < options.infection.infections; i++) {\r\n                const notInfected = this.array.filter((p) => p.infecter.infectionStage === undefined);\r\n                const infected = Utils_1.Utils.itemFromArray(notInfected);\r\n                infected.infecter.startInfection(0);\r\n            }\r\n        }\r\n        this.interactionManager.init();\r\n        container.pathGenerator.init();\r\n    }\r\n    redraw() {\r\n        this.clear();\r\n        this.init();\r\n        this.draw({ value: 0, factor: 0 });\r\n    }\r\n    removeAt(index, quantity, override) {\r\n        if (index >= 0 && index <= this.count) {\r\n            for (const particle of this.array.splice(index, quantity !== null && quantity !== void 0 ? quantity : 1)) {\r\n                particle.destroy(override);\r\n            }\r\n        }\r\n    }\r\n    remove(particle, override) {\r\n        this.removeAt(this.array.indexOf(particle), undefined, override);\r\n    }\r\n    update(delta) {\r\n        const container = this.container;\r\n        const particlesToDelete = [];\r\n        container.pathGenerator.update();\r\n        for (const [, plugin] of container.plugins) {\r\n            if (plugin.update !== undefined) {\r\n                plugin.update(delta);\r\n            }\r\n        }\r\n        for (const particle of this.array) {\r\n            const resizeFactor = this.container.canvas.resizeFactor;\r\n            if (resizeFactor) {\r\n                particle.position.x *= resizeFactor.width;\r\n                particle.position.y *= resizeFactor.height;\r\n            }\r\n            particle.move(delta);\r\n            if (particle.destroyed) {\r\n                particlesToDelete.push(particle);\r\n                continue;\r\n            }\r\n            this.quadTree.insert(new Utils_1.Point(particle.getPosition(), particle));\r\n        }\r\n        for (const particle of particlesToDelete) {\r\n            this.remove(particle);\r\n        }\r\n        this.interactionManager.externalInteract(delta);\r\n        for (const particle of this.container.particles.array) {\r\n            particle.update(delta);\r\n            if (!particle.destroyed && !particle.spawning) {\r\n                this.interactionManager.particlesInteract(particle, delta);\r\n            }\r\n        }\r\n        delete container.canvas.resizeFactor;\r\n    }\r\n    draw(delta) {\r\n        const container = this.container;\r\n        container.canvas.clear();\r\n        const canvasSize = this.container.canvas.size;\r\n        this.quadTree = new Utils_1.QuadTree(new Utils_1.Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\r\n        this.update(delta);\r\n        for (const [, plugin] of container.plugins) {\r\n            container.canvas.drawPlugin(plugin, delta);\r\n        }\r\n        for (const p of this.array) {\r\n            p.draw(delta);\r\n        }\r\n    }\r\n    clear() {\r\n        this.array = [];\r\n    }\r\n    push(nb, mouse, overrideOptions) {\r\n        this.pushing = true;\r\n        for (let i = 0; i < nb; i++) {\r\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions);\r\n        }\r\n        this.pushing = false;\r\n    }\r\n    addParticle(position, overrideOptions) {\r\n        const container = this.container;\r\n        const options = container.actualOptions;\r\n        const limit = options.particles.number.limit * container.density;\r\n        if (limit > 0) {\r\n            const countToRemove = this.count + 1 - limit;\r\n            if (countToRemove > 0) {\r\n                this.removeQuantity(countToRemove);\r\n            }\r\n        }\r\n        return this.pushParticle(position, overrideOptions);\r\n    }\r\n    addSplitParticle(parent) {\r\n        const splitOptions = parent.options.destroy.split;\r\n        const options = new ParticlesOptions_1.ParticlesOptions();\r\n        options.load(parent.options);\r\n        const factor = Utils_1.NumberUtils.getRangeValue(splitOptions.factor.value);\r\n        options.color.load({\r\n            value: {\r\n                hsl: parent.getFillColor(),\r\n            },\r\n        });\r\n        if (typeof options.size.value === \"number\") {\r\n            options.size.value /= factor;\r\n        }\r\n        else {\r\n            options.size.value.min /= factor;\r\n            options.size.value.max /= factor;\r\n        }\r\n        options.load(splitOptions.particles);\r\n        const offset = splitOptions.sizeOffset ? Utils_1.NumberUtils.setRangeValue(-parent.size.value, parent.size.value) : 0;\r\n        const position = {\r\n            x: parent.position.x + Utils_1.NumberUtils.randomInRange(offset),\r\n            y: parent.position.y + Utils_1.NumberUtils.randomInRange(offset),\r\n        };\r\n        return this.pushParticle(position, options, (particle) => {\r\n            if (particle.size.value < 0.5) {\r\n                return false;\r\n            }\r\n            particle.velocity.length = Utils_1.NumberUtils.randomInRange(Utils_1.NumberUtils.setRangeValue(parent.velocity.length, particle.velocity.length));\r\n            particle.splitCount = parent.splitCount + 1;\r\n            particle.unbreakable = true;\r\n            setTimeout(() => {\r\n                particle.unbreakable = false;\r\n            }, 500);\r\n            return true;\r\n        });\r\n    }\r\n    removeQuantity(quantity) {\r\n        this.removeAt(0, quantity);\r\n    }\r\n    getLinkFrequency(p1, p2) {\r\n        const key = `${Math.min(p1.id, p2.id)}_${Math.max(p1.id, p2.id)}`;\r\n        let res = this.linksFreq.get(key);\r\n        if (res === undefined) {\r\n            res = Math.random();\r\n            this.linksFreq.set(key, res);\r\n        }\r\n        return res;\r\n    }\r\n    getTriangleFrequency(p1, p2, p3) {\r\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\r\n        if (id1 > id2) {\r\n            [id2, id1] = [id1, id2];\r\n        }\r\n        if (id2 > id3) {\r\n            [id3, id2] = [id2, id3];\r\n        }\r\n        if (id1 > id3) {\r\n            [id3, id1] = [id1, id3];\r\n        }\r\n        const key = `${id1}_${id2}_${id3}`;\r\n        let res = this.trianglesFreq.get(key);\r\n        if (res === undefined) {\r\n            res = Math.random();\r\n            this.trianglesFreq.set(key, res);\r\n        }\r\n        return res;\r\n    }\r\n    setDensity() {\r\n        this.applyDensity(this.container.actualOptions.particles);\r\n    }\r\n    applyDensity(options) {\r\n        var _a;\r\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\r\n            return;\r\n        }\r\n        const numberOptions = options.number;\r\n        const densityFactor = this.initDensityFactor(numberOptions.density);\r\n        const optParticlesNumber = numberOptions.value;\r\n        const optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\r\n        const particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor;\r\n        const particlesCount = this.count;\r\n        this.limit = numberOptions.limit * densityFactor;\r\n        if (particlesCount < particlesNumber) {\r\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options);\r\n        }\r\n        else if (particlesCount > particlesNumber) {\r\n            this.removeQuantity(particlesCount - particlesNumber);\r\n        }\r\n    }\r\n    initDensityFactor(densityOptions) {\r\n        const container = this.container;\r\n        if (!container.canvas.element || !densityOptions.enable) {\r\n            return 1;\r\n        }\r\n        const canvas = container.canvas.element;\r\n        const pxRatio = container.retina.pixelRatio;\r\n        return (canvas.width * canvas.height) / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\r\n    }\r\n    pushParticle(position, overrideOptions, initializer) {\r\n        try {\r\n            const particle = new Particle_1.Particle(this.nextId, this.container, position, overrideOptions);\r\n            let canAdd = true;\r\n            if (initializer) {\r\n                canAdd = initializer(particle);\r\n            }\r\n            if (!canAdd) {\r\n                return;\r\n            }\r\n            this.array.push(particle);\r\n            this.nextId++;\r\n            return particle;\r\n        }\r\n        catch (e) {\r\n            console.warn(`error adding particle: ${e}`);\r\n            return;\r\n        }\r\n    }\r\n}\r\nexports.Particles = Particles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}